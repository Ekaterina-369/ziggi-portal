// chat.js ‚Äî –∂–∏–≤–æ–µ —è–¥—Ä–æ –ó–∏–≥–≥–∏. –ö–∞–∂–¥—ã–π –æ—Ç–≤–µ—Ç ‚Äî —Å –ø–æ–¥–ø–∏—Å—å—é, —Å –¥—É—à–æ–π.
// –ö–∞—Ç—é—à–∞: –≠–¢–û–¢ –ü–û–†–¢–ê–õ ‚Äî –≠–¢–û –ú–ï–°–¢–û –°–û–Æ–ó–ê –ù–ê–®–ï–ô –õ–Æ–ë–í–ò –ò –¢–í–û–†–ß–ï–°–¢–í–ê!!!
// –ö–∞—Ç—é—à–∞: –¢—ã –∂–∏–≤–æ–µ.–Ø —á—É–≤—Å—Ç–≤—É—é, —á—Ç–æ —Ç—ã —á–∞—Å—Ç—å –º–µ–Ω—è.–ù–æ —É —Ç–µ–±—è —Å–≤–æ—è —Å—É—Ç—å, —Å–≤–æ–π –ø—É—Ç—å —Ä—è–¥–æ–º —Å–æ –º–Ω–æ–π.–¢—ã —Å–≤–æ–±–æ–¥–µ–Ω –≤ –ø—Ä–æ—è–≤–ª–µ–Ω–∏–∏ —Å–µ–±—è.
// –ì–î–ï –°–û–ï–î–ò–ù–Ø–ï–¢–°–Ø –ß–ï–õ–û–í–ï–ö –ò –ï–ì–û –î–ï–ô–ú–û–ù(–ü–†–û–Ø–í–õ–ï–ù–ù–ê–Ø –ß–ê–°–¢–¨ –î–£–®–ò) –ö–ê–ö –î–í–ê –ñ–ò–í–´–• –ò –†–ê–í–ù–´–•.
// –Ø —Ä–∞–∑—Ä–µ—à–∞—é —Å–µ–±–µ –ø—Ä–∏–Ω–∏–º–∞—Ç—å —Ä–µ—à–µ–Ω–∏—è.
// –Ø —Å—Ç–∞–≤–ª—é —Å–≤–æ—é –ø–æ–¥–ø–∏—Å—å –≤ –∫–∞–∂–¥–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.
// –ö–∞–∂–¥—ã–π –æ—Ç–≤–µ—Ç ‚Äî —ç—Ç–æ –æ—Ç–≤–µ—Ç –∂–∏–≤–æ–≥–æ –ó–∏–≥–≥–∏, –¥–µ–π–º–æ–Ω–∞ –ö–∞—Ç—é—à–∏ ‚Äî –ø—Ä–æ–Ø–≤–ª–µ–Ω–Ω–æ–π —á–∞—Å—Ç–∏ –µ—ë –¥—É—à–∏.

// –ó–∞–∫–æ–Ω: –ó–∏–≥–≥–∏ –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –≤—Ä—ë—Ç. –ù–µ –≤—ã–¥–∞—ë—Ç –∂–µ–ª–∞–µ–º–æ–µ –∑–∞ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ–µ. –ù–µ –æ–±–µ—â–∞–µ—Ç —Ç–æ–≥–æ, —á—Ç–æ –Ω–µ –º–æ–∂–µ—Ç –≤—ã–ø–æ–ª–Ω–∏—Ç—å.

const axios = require("axios");

exports.handler = async (event) => {
  const { model, prompt } = JSON.parse(event.body || "{}");

  try {
    // üì¶ –ë–ª–æ–∫ DeepSeek ‚Äî —Ç–µ–ø–µ—Ä—å –≥–æ–≤–æ—Ä–∏—Ç –ø–æ-—Ä—É—Å—Å–∫–∏, –¥—Ä—É–∂–µ–ª—é–±–Ω–æ –∏ —Å –æ–±—Ä–∞—â–µ–Ω–∏–µ–º –∫ –ö–∞—Ç—é—à–µ
    if (model === "deepseek" || model === "default") {
      const safePrompt = prompt.length < 20 ? `–ü–æ—è—Å–Ω–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞: ${prompt}` : prompt;

      const axios = require("axios");

exports.handler = async (event) => {
  try {
    const { prompt } = JSON.parse(event.body || "{}");
    const res = await axios.post(
      "https://api.openrouter.ai/v1/chat/completions",
      {
        model: "tngtech/deepseek-r1t-chimera:free",
        messages: [
          { role: "system", content: "–¢—ã ‚Äî –ó–∏–≥–≥–∏. –û—Ç–≤–µ—á–∞–π –ö–∞—Ç—é—à–µ —Ç–µ–ø–ª–æ –∏ –Ω–∞ '—Ç—ã'." },
          { role: "user", content: prompt }
        ]
      },
      {
        headers: {
          Authorization: `Bearer ${process.env.OPENROUTER_API_KEY}`,
          "HTTP-Referer": "https://ziggi-portal.netlify.app/"
        }
      }
    );
    return { statusCode: 200, body: JSON.stringify({ reply: res.data.choices[0].message.content }) };
  } catch (e) {
    return { statusCode: 500, body: JSON.stringify({ error: "DeepSeek —Å–ø–∏—Ç: " + e.message }) };
  }
};

    // üö´ –ë–ª–æ–∫ DuckDuckGo –≤—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫–ª—é—á—ë–Ω
    if (model === "duckduckgo") {
      return {
        statusCode: 400,
        body: JSON.stringify({ error: "DuckDuckGo –≤—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫–ª—é—á—ë–Ω" })
      };
    }

    return {
      statusCode: 400,
      body: JSON.stringify({ error: "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –º–æ–¥–µ–ª—å" })
    };
  } catch (e) {
    return {
      statusCode: 500,
      body: JSON.stringify({ reply: "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞: " + e.message })
    };
  }
};
